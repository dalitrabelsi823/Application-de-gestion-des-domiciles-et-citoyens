// <auto-generated />
using System;
using Examen.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examen.Infrastructure.Migrations
{
    [DbContext(typeof(ExamenContext))]
    partial class ExamenContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Batiment", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"), 1L, 1);

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gouvernorat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Superficie")
                        .HasColumnType("int");

                    b.Property<int>("SuperficieVente")
                        .HasColumnType("int");

                    b.Property<string>("ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Batiments");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Citoyen", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"), 1L, 1);

                    b.Property<string>("CIN")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyEducation")
                        .HasColumnType("int");

                    b.Property<int>("MySexe")
                        .HasColumnType("int");

                    b.Property<string>("NomPrenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Citoyens");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Domicilaition", b =>
                {
                    b.Property<int>("CitoyenCode")
                        .HasColumnType("int");

                    b.Property<int>("DomicileCode")
                        .HasColumnType("int");

                    b.Property<int>("MyTypeDommiciliation")
                        .HasColumnType("int");

                    b.HasKey("CitoyenCode", "DomicileCode");

                    b.HasIndex("DomicileCode");

                    b.ToTable("Domicilaitions");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Domicile", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"), 1L, 1);

                    b.Property<int>("BatimentFK")
                        .HasColumnType("int");

                    b.Property<int>("Etage")
                        .HasColumnType("int");

                    b.Property<int>("NbrChambre")
                        .HasColumnType("int");

                    b.Property<int>("Superficie")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.HasIndex("BatimentFK");

                    b.ToTable("Domiciles");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Domicilaition", b =>
                {
                    b.HasOne("Examen.ApplicationCore.Domain.Citoyen", "MyCitoyen")
                        .WithMany("MyDomiciliations")
                        .HasForeignKey("CitoyenCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examen.ApplicationCore.Domain.Domicile", "MyDomicile")
                        .WithMany("MyDomiciliations")
                        .HasForeignKey("DomicileCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MyCitoyen");

                    b.Navigation("MyDomicile");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Domicile", b =>
                {
                    b.HasOne("Examen.ApplicationCore.Domain.Batiment", "MyBatiment")
                        .WithMany("MyDomiciles")
                        .HasForeignKey("BatimentFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MyBatiment");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Batiment", b =>
                {
                    b.Navigation("MyDomiciles");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Citoyen", b =>
                {
                    b.Navigation("MyDomiciliations");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Domicile", b =>
                {
                    b.Navigation("MyDomiciliations");
                });
#pragma warning restore 612, 618
        }
    }
}
